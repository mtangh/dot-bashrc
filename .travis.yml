---
# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline

language: python

python: "2.7"

# Use the new container infrastructure
sudo: true

# Install ansible
addons:
  apt:
    packages:
    - python-pip

install:
  # Check bash version
  - bash --version
  # Install ansible
  - pip install ansible; ansible --version
  ## Create ansible.cfg with correct roles_path
  #- printf '[defaults]\nroles_path=../' >ansible.cfg

script:
  # Scripts:
  - |
    set -x;
    : "syntax-check.sh" && {
      bash -n syntax-check.sh &&
      bash syntax-check.sh
    } &&
    : "OK";

  # Install shell
  - |
    set -x;
    : "install.sh" && {
      bash -n install.sh &&
      bash install.sh --install --source=$(pwd)/roles/bashrc && {
        ( for check_file in \
           ${HOME}/.config/bash.{bashrc,profile} \
           ${HOME}/.config/bash.bashrc.d/vim/vimrc \
           ${HOME}/.config/bash.bashrc.d/skel.d/default/dot.{bashrc,inputrc,vimrc} \
           ${HOME}/.bashrc ;
          do [ -e "${check_file}" ] && echo "Found - ${check_file}" || exit 1
          done; ) &&
        ( . "${HOME}/.config/bash.bashrc" &&
          echo "Load ${HOME}/.config/bash.bashrc" && {
            [ -n "$os"       ] && echo "Found - os=$os"             &&
            [ -n "$vendor"   ] && echo "Found - vendor=$vendor"     &&
            [ -n "$osvendor" ] && echo "Found - osvendor=$osvendor" &&
            [ -n "$machine"  ] && echo "Found - machine=$machine"   &&
            :;
          }; )
      }
    } &&
    : "OK";

  # Basic role syntax check, and tests-run
  - |
    set -x;
    ansible_play="ansible-playbook -i inventory test.yml"
    tests_case_ret=0;
    cd roles/bashrc/tests/ && {
      echo "ansible-playbook syntax-check." &&
      $ansible_play --syntax-check &&
      echo "ansible-playbook tests-run." &&
      for tests_casename in $(
        $ansible_play --list-tags 2>/dev/null |
        egrep '^[ ]*play[ ]*.*[ ]*TAGS:' |
        sed -En 's@^[ ]*play[ ]*.*[ ]*TAGS:[ ]*\[\([^ ,]\+\).*\].*$@\1@gp' |
        sort -u 2>/dev/null )
      do
        echo "ansible-playbook tests-run [$tests_casename]."
        $ansible_play -e tests_run=yes -e tests_casename="${tests_casename}" ||
        tests_case_ret=$?
      done &&
      [ ${tests_case_ret:-1} =eq 0 ];
    } &&
    : "OK";

# Notifications
#notifications:
#  email:
#  - your@emailaddress

