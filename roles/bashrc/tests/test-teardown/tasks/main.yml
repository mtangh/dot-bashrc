---
# test-teardown tasks file
# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline

- block:

  - name: "{{ tests_casename|d('noname') }} | test-terdown | validate"
    shell: |
      diff -Nur \
        {{ tests_ignore_validation_files|d('') }}\
        -I '^# Ansible managed:.*$' \
        "{{ tests_files_expects_dir_for_case }}" \
        "{{ tests_prefix_dir }}"
    when: tests_files_expects_dir_for_case|is_dir
    changed_when: no
    no_log: "{{ tests_files_expects_dir_for_case|is_dir == false }}"

  when: tests_run|d(false)
  vars:
    tests_files_expects_dir_for_case: "{{
      '%s/%s'|format(tests_files_expects_dir,tests_casename) }}"
  tags:
  - '[test-teardown]'

- block:

  - name: "{{ tests_casename|d('noname') }} | test-teardown | validate rc"
    shell: |
      [ -z "{{ 'user' if bashrc_install_system|d(true) == false else '' }}" ] &&
      [ -r "{{ '%s/bash.bashrc'|format(bash_bashrc_install_path) }}" ] &&
      [ -d "{{ '%s/bash.bashrc.d'|format(bash_bashrc_install_path) }}" ] && {
        echo "OK"; exit 0; }
      [ -n "{{ 'user' if bashrc_install_system|d(true) == false else '' }}" ] &&
      [ -r "{{ '%s/.bashrc'|format(bash_bashrc_install_path) }}" ] &&
      [ -r "{{ '%s/.bash_profile'|format(bash_bashrc_install_path) }}" ] &&
      [ -d "{{ '%s/.bash.bashrc.d'|format(bash_bashrc_install_path) }}" ] && {
        echo "OK"; exit 0; }
      echo "NG"; exit 1
    args:
      executable: "/bin/bash"

  - name: "{{ tests_casename|d('noname') }} | test-teardown | validate rc"
    shell: |
      unset machine ostype osvendor
      [ -z "{{ 'user' if bashrc_install_system|d(true) == false else '' }}" ] &&
      [ -r "{{ '%s/bash.bashrc'|format(bash_bashrc_install_path) }}" ] &&
      . "{{ '%s/bash.bashrc'|format(bash_bashrc_install_path) }}" && {
        echo "OK"; exit 0; }
      [ -z "{{ 'user' if bashrc_install_system|d(true) == false else '' }}" ] &&
      [ -r "{{ '%s/.bashrc'|format(bash_bashrc_install_path) }}" ] &&
      . "{{ '%s/.bashrc'|format(bash_bashrc_install_path) }}" && {
        echo "OK"; exit 0; }
      echo "NG"; exit 2
    args:
      executable: "/bin/bash"

  vars:
    _test_expects_dir: "{{ '%s/files/expects/%s'|format(test_teardown_dir,test_casename) }}"
    _test_actual_dir: "{{ '%s%s'|format(test_prefix_dir,'') }}"

  when: test_run|d(none) is not none
        and test_casename|d(none) is not none
        and test_teardown_dir|d(none) is not none
        and test_prefix_dir|d(none) is not none
  tags:
  - '[test-teardown]'

