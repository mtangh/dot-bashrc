---
# test-teardown tasks file
# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline

- block:

  - name: "{{ tests_casename|d('noname') }} | test-terdown | validate"
    shell: |
      diff -Nur {{ tests_ignore_validation_files|d('') }}\
        -I '^# Ansible managed:.*$' \
        "{{ tests_files_expects_dir_for_case }}" \
        "{{ tests_prefix_dir }}"
    when: tests_files_expects_dir_for_case|is_dir
    changed_when: no
    no_log: "{{ tests_files_expects_dir_for_case|is_dir == false }}"

  when: tests_run|d(false)
  vars:
    tests_files_expects_dir_for_case: "{{
      '%s/%s'|format(tests_files_expects_dir,tests_casename) }}"
  tags:
  - '[test-teardown]'

- block:

  - name: "{{ tests_casename|d('noname') }} | test-teardown | validate '{{ bashrc_install_for|d('system') }}' rc"
    shell: |
      install_for_user="{{ 'yes' if bashrc_install_for|d('system') != 'system' else '' }}";
      [ -z "$install_for_user" ] &&
      [ -r "{{ '%s/bash.bashrc'|format(bashrc_install_path) }}" ] &&
      [ -r "{{ '%s/bash.profile'|format(bashrc_install_path) }}" ] &&
      [ -r "{{ '%s/bashrc'|format(bashrc_install_path) }}" ] &&
      [ -r "{{ '%s/profile'|format(bashrc_install_path) }}" ] &&
      [ -d "{{ '%s/bash.bashrc.d'|format(bashrc_install_path) }}" ] && {
        echo "OK"; exit 0; }
      [ -n "$install_for_user" ] &&
      [ -r "{{ '%s/%s'|format(bashrc_install_path,bashrc_bashrc_name) }}" ] &&
      [ -r "{{ '%s/%s'|format(bashrc_install_path,bashrc_profile_name) }}" ] &&
      [ -d "{{ '%s/%s'|format(bashrc_install_path,bashrc_bashrcdir_name) }}" ] && {
        echo "OK"; exit 0; }
      echo "NG"; exit 1
    args:
      executable: "/bin/bash"

  - name: "{{ tests_casename|d('noname') }} | test-teardown | load '{{ bashrc_install_for|d('system') }}' rc"
    shell: |
      unset machine ostype osvendor
      install_for_user="{{ 'yes' if bashrc_install_for|d('system') != 'system' else '' }}";
      [ -z "$install_for_user" ] &&
      [ -r "{{ '%s/bash.bashrc'|format(bashrc_install_path|d('-')) }}" ] && {
        . "{{ '%s/bash.bashrc'|format(bashrc_install_path|d('-')) }}" && {
          echo "OK"; exit 0; }; }
      [ -n "$install_for_user" ] &&
      [ -r "{{ '%s/.bashrc'|format(bashrc_userhomedir_path|d('-')) }}" ] && {
        . "{{ '%s/.bashrc'|format(bashrc_userhomedir_path|d('-')) }}" && {
          echo "OK"; exit 0; }; }
      echo "NG"; exit 2
    args:
      executable: "/bin/bash"

  vars:
    _tests_expects_dir: "{{ '%s/files/expects/%s'|format(tests_teardown_dir,tests_casename) }}"
    _tests_actual_dir: "{{ '%s%s'|format(tests_prefix_dir,'') }}"

  when: tests_run|d(none) is not none
        and tests_casename|d(none) is not none
        and tests_teardown_dir|d(none) is not none
        and tests_prefix_dir|d(none) is not none
  tags:
  - '[test-teardown]'

