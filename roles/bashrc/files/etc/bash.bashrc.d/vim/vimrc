"*****************************************************************************
"
"  Configuration file for vim
"
"*****************************************************************************
"
" VI Compatibility
" ================
" Normally we use vim-extensions.
" If you want true vi-compatibility remove change the following statements
" Use Vim defaults instead of 100% vi compatibility
set nocompatible
" List of flags to specify Vi compatibility
"set cpoptions=aABceFs
"
" VIM mode Control
" ================
" Use Insert mode as the default mode
"set insertmode
" Paste mode, insert typed text literally
"set paste
" Key sequence to toggle paste mode 
"set pastetoggle
"
" Runtime Path
" ============
" List of directories used for runtime files and plugins 
set runtimepath^=~/.vim,/etc/bash.bashrc.d/vim/vim.d,/etc/vim
"
" Help file
" =========
" Name of the main help file
"set helpfile=/usr/share/vim/vimXX/doc/help.txt
"
" Language Settings
" =================
" Character encoding used in Vim:
"  "latin1", "utf-8", "euc-jp", "big5", etc.
if match(v:lang,'\.\cutf\(-\|\)8$') > 0
  set encoding=utf-8
elseif match(v:lang,'\.\ceuc\(-\|\)\cjp$') > 0
  set encoding=euc-jp
elseif match(v:lang,'\.\cshift\(-\|\)\cjis$') > 0
  set encoding=sjis
else
  set encoding=utf-8
endif
" Character encoding used by the terminal
if (!&termencoding)
  let &termencoding=&encoding
endif
" Character encoding for the current file
if (!&fileencoding)
  let &fileencoding=&encoding
endif
" Automatically detected character encodings
set fileencodings=iso-2022-jp,euc-jp,cp932,sjis,utf-8,ucs-bom,utf-16,latin1
"set fileencodings=utf-8,cp932,sjis,euc-jp,iso-2022-jp,ucs-bom,utf-16,latin1
"
" Reading and Writing files
" =========================
" Enable using settings from modelines when reading a file
set modeline
" Number of lines to check for modelines
"set modelines=0
" end-of-line format: "dos", "unix" or "mac"
"set fileformat=unix
" List of file formats to look for when editig a file
set fileformats=unix,dos,mac
" Writing files is allowed
"set write
" Write a backup file before overwriting a file
"set nowritebackup
" Automatically write a file when leaving a modified buffer
"set noautowrite
" As 'autowrite', but works with more commands
"set noautowriteall
" Always write without asking for confirmation
"set nowriteany
" Automatically read a file when it was modified outside of Vim
"set noautoread
"
" Backups
" =======
" Keep a backup after overwriting a file
set nobackup
" Patterns that specify for which files a backup is not made
"set backupskip=/tmp/*
" Whether to make the backup as a copy or rename the existing file
"set backupcopy=auto
" List of directories to put backup files in
"set backupdir=
" File name extension for the backup file
"set backupext=~
"
" Messages and info.
" ==================
" Display the current mode in the status line
set showmode
" Show (partial) command keys in the status line
set showcmd
" Show cursor position below each window
set ruler
" Alternate format to be used for the ruler
"set rulerformat=
" List of preferred languages for finding help
set helplang=ja
"
" Displaying Text
" ===============
" Width of the display
"set columns=104
" Number of lines in the display
"set lines=32
" Number of lines to scroll for CTRL-U and CTRL-D
set scroll=0
" Number of screen lines to show around the cursor
set scrolloff=4
" Minimal number of columns to scroll horizontally
set sidescroll=0
" Minimal number of columns to keep left and right of the cursor
set sidescrolloff=8
" Long lines wrap
"set nowrap
" Wrap long lines at a character in 'breakat'
"set linebreak
" Which characters might cause a line break
"set breakat=\ \	!@*-+;:,./?
" String to put before wrapped screen lines
"set showbreak=
" Include "lastline" to show the last line even if it doesn't fit
" Include "uhex" to show unprintable characters as a hex number
"set display=
" Characters to use for the status line, folds and filler lines
"set fillchars=vert:\|,fold:-
" Show <Tab> as ^I and end-of-line as $
"set list
" List of strings used for list mode
"set listchars=eol:$
" Show the line number for each line
"set number
" Number of columns to use for the line number
"set numberwidth=4
" Don't redraw while executing macros
"set lazyredraw
" Delay in msec for each char written to the display (for debugging)
"set writedelay=0
"
" Editing Text
" ============
" Maximum number of changes that can be undone
"set undolevels=1000
" Changes have been made and not written to a file
"set modified
" Buffer is not to be written
"set readonly
" Changes to the text are not possible
"set modifiable
" Line length above which to break a line
"set textwidth=0
" Margin from the right in which to break a line
"set wrapmargin=0
" Definition of what comment lines look like
"set comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
" Specifies what <BS>, CTRL-W, etc. can do in Insert mode
"set backspace=2
" List of flags that tell how automatic formatting works
"set formatoptions=tcq
" Pattern to recognize a numbered list
"set formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
" Expression used for "gq" to format lines
"set formatexpr=
" When inserting a bracket, briefly jump to its match
set showmatch
" Tenth of a second to show a match for 'showmatch'
"set matchtime=5
" List of pairs that match for the "%" command
"set matchpairs=(:),{:},[:]
" Enable entering digraps with c1 <BS> c2
"set digraph
" The "~" command behaves like an operator
"set tildeop
" Function called for the"g@"  operator
"set operatorfunc=
" Use two spaces after '.' when joining a line
"set joinspaces
" Number formats recognized for CTRL-A and CTRL-X commands; 'alpha', 'octal' and/or 'hex';
"set nrformats=octal,hex
"
" Completion
" ===========
" Specifies how Insert mode completion works for CTRL-N and CTRL-P
"set complete=.,w,b,u,t,i
" Whether to use a popup menu for Insert mode completion
"set completeopt=menu,preview
" Maximum height of the popup menu
"set pumheight=0
" User defined function for Insert mode completion
"set completefunc=
" Function for filetype-specific Insert mode completion
"set omnifunc=
" List of dictionary files for keyword completion
"set dictionary=
" List of thesaurus files for keyword completion
"set thesaurus=
" Adjust case of a keyword completion match
"set infercase
" 
" Syntax
" ======
" Name of syntax highlighting used
"set syntax=
" Maximum column to look for syntax items
"set synmaxcol=3000
"
" Highlighting
" ============
" Which highlighting to use for various occasions
"set highlight=:SpecialKey,@:NonText,d:Directory,e:ErrorMsg,i:IncSearch,l:Search,m:MoreMsg,M:ModeMsg,n:LineNr,r:Question,s:StatusLine,S:StatusLineNC,c:VertSplit,t:Title,v:Visual,V:VisualNOS,w:WarningMsg,W:WildMenu,f:Folded,F:FoldColumn,A:DiffAdd,C:DiffChange,D:DiffDelete,T:DiffText,>:SignColumn,B:SpellBad,P:SpellCap,R:SpellRare,L:SpellLocal,+:Pmenu,=:PmenuSel,x:PmenuSbar,X:PmenuThumb,*:TabLine,#:TabLineSel,_:TabLineFill,!:CursorColumn,.:CursorLine
" Highlight all matches for the last used search pattern
set hlsearch
" Highlight the screen column of the cursor
"set cursorcolumn
" Highlight the screen line of the cursor
"set cursorline
"
" Spelling
" ========
" Highlight spelling mistakes
"set spell
" List of accepted languages
"set spelllang=en
" File that "zg" adds good words to
"set spellfile=
" Pattern to locate the end of a sentence
"set spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
" Methods used to suggest corrections
"set spellsuggest=best
" Amount of memory used by :mkspell before compressing
"set mkspellmem=460000,2000,500
"
" Tabs and Indenting
" ==================
" Number of spaces a <Tab> in the text stands for
set tabstop=4
" Number of spaces used for each step of (auto)indent
set shiftwidth=4
" A <Tab> in an indent inserts 'shiftwidth' spaces
"set smarttab
" If non-zero, number of spaces to insert for a <Tab>
"set softtabstop=0
" Expand <Tab> to spaces in Insert mode
"set expandtab
" Automatically set the indent of a new line
"set autoindent
" Do clever autoindenting
"set smartindent
" Copy whitespace for indenting from previous line
"set copyindent
" Expression used to obtain the indent of a line
"set indentexpr=
" Keys that trigger indenting with 'indentexpr' in Insert mode
"set indentkeys=0{,0},:,0#,!^F,o,O,e
" Preserve kind of whitespace when changing indent
"set preserveindent
"
" "C" Indenting
" =============
" Enable specific indenting for C code
"set cindent
" Options for C-indenting
"set cinoptions
" Keys that trigger C-indenting in Insert mode
"set cinkeys=0{,0},0),:,0#,!^F,o,O,e
" List of words that cause more C-indent
"set cinwords=if,else,while,do,for,switch
"
" "Lisp" Indenting
" ================
" Enable Lisp mode
"set lisp
" Words that change how lisp indenting works
"set lispwords=
"
" Multiple Window
" ===============
" Alternate format to be used for a status line
set statusline=%<%f\ %m%r%h%w%{'['.(&fenc!=''?&fenc:&enc).']['.&ff.']'}%=%l,%c%V%8P
" When to use a status line for the last window; 0, 1 or 2
set laststatus=2
" Make all windows the same size when adding/removing windows
"set equalalways
" In which direction 'equalalways' works: "ver", "hor" or "both"
"set eadirection=both
" Minimal number of lines used for the current window
"set winheight=1
" Minimal number of lines used for any window
"set winminheight=1
" Keep the height of the window
"set winfixheight
" Minimal number of columns used for the current window
"set winwidthi=20
" Minimal number of columns used for any window
"set winminwidth=1
" Keep the width of the window
"set winfixwidth
" Initial height of the help window
"set helpheight=20
" Default height for the preview window
"set previewheight=12
" Identifies the preview window
"set previewwindow
" Don't unload a buffer when no longer shown in a window
"set hidden
" Which window to use when jumping to a buffer; "useopen" and/or "split"
"set switchbuf=
" A new window is put below the current one
"set splitbelow
" A new window is put right of the current one
"set splitright
" This window scrolls together with other bound windows
"set scrollbind
" List of options for 'scrollbind'; "ver", "hor" and/or "jump"
"set scrollopt=ver,jump
"
" Multiple tab pages
" ==================
" When to use a tab pages line
set showtabline=2
" Maximum number of tab pages to open for -p and "tab all"
set tabpagemax=8
" Custom tab pages line
"set tabline=
"
" Command line editing
" ====================
" Number of lines used for the command-line
"set cmdheight=1
" How many command lines are remembered
set history=8
" Key that triggers command-line expansion
"set wildchar=9
" Like 'wildchar' but can also be used in a mapping
"set wildcharm=0
" Specifies how command line completion works
"set wildmode=full
" List of patterns to ignore files for file name completion
"set wildignore=
" Command-line completion shows a list of matches
"set wildmenu
" Key used to open the command-line window
"set cedit=^F   
" Height of the command-line window
"set cmdwinheight=6
" Suffixes that get lower priority when doing tab completion for filenames.
" These are files we are not likely to want to edit or read.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi
set suffixes+=.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
"
" Editing Options
" ===============
" Don't write backup file if vim is being called by "crontab -e"
"au BufWrite /tmp/crontab.* set nowritebackup
" Don't write backup file if vim is being called by "chpass"
"au BufWrite /etc/pw.* set nowritebackup
"
"*eof*
