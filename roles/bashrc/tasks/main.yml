---
# tasks file for bashrc
# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline

- block:

  - name: bashrc | setup | System-wide bashrc
    include: 'setup-system.yml'
    when: bashrc_install_system|d(true) == true

  - name: bashrc | setup | User local bashrc
    include: 'setup-user.yml'
    when: bashrc_install_system|d(true) == false

  - name: bashrc | setup | Set facts install path
    set_fact:
      bash_bashrc_root_dir: "{{
        '%s%s'|format(tests_prefix_dir|d(''),bashrc_install_prefix)|realpath
        if bashrc_install_prefix|d('')|length > 0 else
        '%s%s'|format(tests_prefix_dir|d(''),bash_bashrc_base_dir)|realpath }}"

  - name: bashrc | setup | Set facts path of bash.bashrc.d
    set_fact:
      bash_bashrc_dir_path: "{{
        '%s/%s'|format(bash_bashrc_root_dir,bash_bashrc_bashrc_dir_name) }}"

  tags:
  - always

- block:

  - name: bashrc | backup | Create a directory for backup.
    file:
      path: "{{ _bashrc_backup_todir }}"
      state: directory
      owner: "{{ bash_bashrc_install_owner }}"
      group: "{{ bash_bashrc_install_group }}"
      mode: "{{ bash_bashrc_dir_mode|d('0755') }}"
    register: _bashrc_backup_dir_mkdir

  - name: bashrc | backup | Stat backup directory.
    stat:
      path: "{{ _bashrc_backup_todir }}"
    register: _bashrc_backup_dir_st
    when: _bashrc_backup_dir_mkdir|changed

  - name: bashrc | backup | Backup the original files.
    copy:
      src: "{{ _bashrc_origin_dir }}/{{ item }}"
      dest: "{{ _bashrc_backup_todir }}/{{ item }}"
      remote_src: true
    ignore_errors: true
    with_items:
    - bashrc
    - profile
    - bash.bashrc
    - bash.profile
    when: _bashrc_backup_dir_st.stat|d(none) is not none
          and _bashrc_backup_dir_st.stat.isdir|d(false) == true

  vars:
    _bashrc_origin_dir: "{{ bash_bashrc_root_dir }}"
    _bashrc_backup_todir: "{{ '%s/%s'|format(_bashrc_origin_dir,'._bashrc-origin') }}"
  tags:
  - bashrc-backup-origin

- block:

  - name: "bashrc | bash.bashrc.d | Create a '{{ bash_bashrc_dir_path|basename }}' directory."
    file:
      path: "{{ bash_bashrc_dir_path }}"
      state: directory
      owner: "{{ bash_bashrc_install_owner }}"
      group: "{{ bash_bashrc_install_group }}"
      mode: "{{ bash_bashrc_dir_mode|d('0755') }}"

  - name: "bashrc | bash.bashrc.d | Install '{{ bash_bashrc_dir_path|basename }}' files"
    synchronize:
      src: 'etc/bash.bashrc.d/'
      dest: "{{ bash_bashrc_dir_path }}/"
      checksum: yes
      compress: yes
      delete: yes
      links: yes
      recursive: yes
    register: _bashrc_files_installed

  - name: "bashrc | bash.bashrc.d | Find files and dirs under the {{ bash_bashrc_dir_path|basename }}/"
    find:
      paths: "{{ bash_bashrc_dir_path }}"
      recurse: yes
    register: _bashrc_find

  - name: "bashrc | bash.bashrc.d | Change mode all files and dirs under the {{ bash_bashrc_dir_path|basename }}/"
    file:
      path: "{{ item.path }}"
      state: touch
      owner: "{{ bash_bashrc_install_owner }}"
      group: "{{ bash_bashrc_install_group }}"
      mode: "{{ bash_bashrc_file_mode|d('0644')
                if item.isdir == false else bash_bashrc_dir_mode|d('0755') }}"
    with_items: "{{ _bashrc_find.files|d([]) }}"
    when: _bashrc_find|d(none) is not none
          and item|d(none) is not none

  - name: "bashrc | bash.bashrc.d | Find shell files under the {{ bash_bashrc_dir_path|basename }}/"
    find:
      paths: "{{ bash_bashrc_dir_path }}"
      patterns: "*.sh*"
      recurse: yes
    register: _bashrc_find_sh

  - name: "bashrc | bash.bashrc.d | Find shell files under the {{ bash_bashrc_dir_path|basename }}/bin"
    find:
      paths: "{{ bash_bashrc_dir_path }}/bin"
      file_type: file
      recurse: yes
    register: _bashrc_find_bin

  - name: "bashrc | bash.bashrc.d | Change mode all shell script files"
    file:
      path: "{{ item.path }}"
      state: touch
      owner: "{{ bash_bashrc_install_owner }}"
      group: "{{ bash_bashrc_install_group }}"
      mode: "{{ bash_bashrc_script_mode|d('0755') }}"
    with_flattened:
    - "{{ _bashrc_find_sh.files|d([]) }}"
    - "{{ _bashrc_find_bin.files|d([]) }}"
    when: item.path|d(none) is not none

  tags:
  - bash-bashrc-dir

- block:

  - name: "bashrc | template | Install the rc files from template"
    template:
      src: "{{ item.src }}.j2"
      dest: "{{ item.dest }}"
      owner: "{{ bash_bashrc_install_owner }}"
      group: "{{ bash_bashrc_install_group }}"
      mode: "{{ bash_bashrc_file_mode|d('0644') }}"
    register: _bashrc_installed_template_files
    with_items: "{{ _bashrc_template_files|d([]) }}"
    when: item|d(none) is not none
          and item.src|d('')|length > 0
          and item.dest|d('')|length > 0

  vars:
    _bashrc_template_files:
    - src: "etc/bash.bashrc"
      dest: "{{ '%s/%s'|format(
                bash_bashrc_root_dir,bash_bashrc_profile_name) }}"
    - src: "etc/bash.profile"
      dest: "{{ '%s/%s'|format(
                bash_bashrc_root_dir,bash_bashrc_rc_file_name) }}"
    - src: "etc/vim/vimrc"
      dest: "{{ '%s/vim/vimrc'|format(bash_bashrc_dir_path) }}"
  tags:
  - bash-bashrc-template-files

- block:

  - name: "bashrc | symlinks | Symlinks"
    file:
      src: "{{ '%s/%s'|format(bash_bashrc_root_dir,item.src) }}"
      dest: "{{ '%s/%s'|format(bash_bashrc_root_dir,item.dest) }}"
      state: link
      force: yes
    with_items: "{{ _bashrc_symlinks_files|d([]) }}"
    when: item.src|d(none) is not none
          and item.dest|d(none) is not none

  vars:
    _bashrc_symlinks_files:
    - src: "bash.bashrc"
      dest: "bashrc"
    - src: "bash.profile"
      dest: "profile"
  when: bashrc_install_system|d(true) == true
        and _bashrc_installed_template_files|changed
  tags:
  - bash-bashrc-symlinks

- block:

  - name: bashrc | user | User local bashrc
    include: 'user.yml'
    vars:
      user_bashrc_homedir: "{{ user_homedir }}"
      user_bashrc_owner: "{{ bash_bashrc_install_owner }}"
      user_bashrc_group: "{{ bash_bashrc_install_group }}"

  when: bashrc_install_system|d(true) == false
  tags:
  - bash-bashrc-for-user

