---
# tasks file for bashrc
# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline

- block: 

  - name: bashrc | setup | Stat install prefix
    stat:
      path: "{{
        '%s%s'|format(
        prefix_dir|d(''),bashrc_install_prefix)|realpath }}"
    register: bash_bashrc_install_prefix_st
    when: bashrc_install_prefix|d(none) is not none

  - name: bashrc | setup | Set facts install path
    set_fact:
      bash_bashrc_install_path: "{{
        bash_bashrc_install_prefix_st.stat.path
        if bash_bashrc_install_prefix_st.stat|d(none) is not none
        and bash_bashrc_install_prefix_st.stat.path|d(none) is not none
        else '%s%s'|format(prefix_dir|d(''),bash_bashrc_base_dir)|realpath }}"

  - name: bashrc | setup | Set facts owner and group, etc...
    set_fact:
      bash_bashrc_for_user: "{{
        bash_bashrc_install_path|
        match('^%s$'|format('%s/etc'|format(
        prefix_dir|d(''))|realpath)) == false }}"
      bash_bashrc_need_dot: "{{
        bash_bashrc_install_path|
        match('^%s$'|format('%s/etc'|format(
        prefix_dir|d(''))|realpath)) == false
        and bash_bashrc_install_path|
        match('/\..*') == false }}"
      bash_bashrc_install_owner: "{{
        bash_bashrc_install_prefix_st.stat.pw_name
        if bash_bashrc_install_prefix_st.stat|d(none) is not none
        and bash_bashrc_install_prefix_st.stat.pw_name|d(none) is not none
        else test_owner|d(bash_bashrc_owner|d('root')) }}"
      bash_bashrc_install_group: "{{
        bash_bashrc_install_prefix_st.stat.gr_name
        if bash_bashrc_install_prefix_st.stat|d(none) is not none
        and bash_bashrc_install_prefix_st.stat.gr_name|d(none) is not none
        else test_group|d(bash_bashrc_group|d('root')) }}"

  - name: bashrc | setup | Set facts path of bash.bashrc.d
    set_fact:
      bash_bashrc_dir_path: "{{
        '%s/%s%s'|format(bash_bashrc_install_path,
        ('.' if bash_bashrc_need_dot else ''),
        'bash.bashrc.d') }}"

  tags:
  - always

- block:

  - name: bashrc | backup | Create a directory for backup.
    file:
      path: "{{ __bashrc_backup_todir }}"
      state: directory
      owner: "{{ bash_bashrc_install_owner }}"
      group: "{{ bash_bashrc_install_group }}"
      mode: "{{ bash_bashrc_dir_mode|d('0755') }}"
    register: __bashrc_backup_dir_mkdir

  - name: bashrc | backup | Stat backup directory.
    stat:
      path: "{{ __bashrc_backup_todir }}"
    register: __bashrc_backup_dir_stat
    when: __bashrc_backup_dir_mkdir|changed

  - name: bashrc | backup | Backup the original files.
    copy:
      src: "{{ __bashrc_origin_dir }}/{{ item }}"
      dest: "{{ __bashrc_backup_todir }}/{{ item }}"
      remote_src: true
    ignore_errors: true
    with_items: 
    - bashrc
    - profile
    - bash.bashrc
    - bash.profile
    - .bashrc
    - .bash_profile
    - .bash_logout
    - .profile
    - .inputrc
    - .vimrc
    when: __bashrc_backup_dir_stat.stat|d(none) is not none
          and __bashrc_backup_dir_stat.stat.isdir|d(false) == true

  vars:
    __bashrc_origin_dir: "{{ bash_bashrc_install_path }}"
    __bashrc_backup_todir: "{{ '%s/%s'|format(__bashrc_origin_dir,'._bashrc-origin') }}"

  tags:
  - bashrc-backup-origin

- block:

  - name: "bashrc | bash.bashrc.d | Create a '{{ bash_bashrc_dir_path|basename }}' directory."
    file:
      path: "{{ bash_bashrc_dir_path }}"
      state: directory
      owner: "{{ bash_bashrc_install_owner }}"
      group: "{{ bash_bashrc_install_group }}"
      mode: "{{ bash_bashrc_dir_mode|d('0755') }}"

  - name: "bashrc | bash.bashrc.d | Install '{{ bash_bashrc_dir_path|basename }}' files"
    synchronize:
      src: 'etc/bash.bashrc.d/'
      dest: "{{ bash_bashrc_dir_path }}/"
      checksum: yes
      compress: yes
      delete: yes
      links: yes
      recursive: yes
    register: __bashrc_files_installed

  - name: "bashrc | bash.bashrc.d | Find files and dirs under the {{ bash_bashrc_dir_path|basename }}/"
    find:
      paths: "{{ bash_bashrc_dir_path }}"
      recurse: yes
    register: __bashrc_find

  - name: "bashrc | bash.bashrc.d | Change mode all files and dirs under the {{ bash_bashrc_dir_path|basename }}/"
    file:
      path: "{{ item.path }}"
      state: touch
      owner: "{{ bash_bashrc_install_owner }}"
      group: "{{ bash_bashrc_install_group }}"
      mode: "{{ bash_bashrc_file_mode|d('0644')
                if item.isdir == false else bash_bashrc_dir_mode|d('0755') }}"
    with_items: "{{ __bashrc_find.files|d([]) }}"
    when: __bashrc_find|d(none) is not none
          and item|d(none) is not none

  - name: "bashrc | bash.bashrc.d | Find shell files under the {{ bash_bashrc_dir_path|basename }}/"
    find:
      paths: "{{ bash_bashrc_dir_path }}"
      patterns: "*.sh*"
      recurse: yes
    register: __bashrc_find_sh

  - name: "bashrc | bash.bashrc.d | Find shell files under the {{ bash_bashrc_dir_path|basename }}/bin"
    find:
      paths: "{{ bash_bashrc_dir_path }}/bin"
      file_type: file
      recurse: yes
    register: __bashrc_find_bin

  - name: "bashrc | bash.bashrc.d | Change mode all shell script files"
    file:
      path: "{{ item.path }}"
      state: touch
      owner: "{{ bash_bashrc_install_owner }}"
      group: "{{ bash_bashrc_install_group }}"
      mode: "{{ bash_bashrc_script_mode|d('0755') }}"
    with_flattened:
    - "{{ __bashrc_find_sh.files|d([]) }}"
    - "{{ __bashrc_find_bin.files|d([]) }}"
    when: item.path|d(none) is not none

  tags:
  - bash-bashrc-dir

- block:

  - name: "bashrc | rcfiles | Install the rc files from template"
    template:
      src: "etc/{{ item.src }}.j2"
      dest: "{{ '%s/%s'|format(bash_bashrc_install_path,item.src) }}"
      owner: "{{ bash_bashrc_install_owner }}"
      group: "{{ bash_bashrc_install_group }}"
      mode: "{{ bash_bashrc_file_mode|d('0644') }}"
    register: __bashrc_installed_rc_files
    with_items: "{{ __bashrc_rc_files|d([]) }}"
    when: item.src|d(none) is not none

  - name: "bashrc | rcfiles | Symlinks rc files"
    file:
      src: "{{ '%s/%s'|format(bash_bashrc_install_path,item.src) }}"
      dest: "{{ '%s/%s'|format(bash_bashrc_install_path,item.dest) }}"
      state: link
      force: yes
    with_items: "{{ __bashrc_rc_files|d([]) }}"
    when: __bashrc_installed_rc_files|changed
          and item.src|d(none) is not none
          and item.dest|d(none) is not none

  vars:
    __bashrc_rc_files:
    - src: "{{ '.' if bash_bashrc_need_dot
                   else '' }}bash.bashrc"
      dest: "{{ '.' if bash_bashrc_for_user
                    else '' }}bashrc"
    - src: "{{ '.' if bash_bashrc_need_dot
                   else '' }}bash.profile"
      dest: "{{ '.bash_' if bash_bashrc_for_user
                         else '' }}profile"
  tags:
  - bash-bashrc-rcfiles

- block:

  - name: "bashrc | vimrc | Install the vimrc from template"
    template:
      src: "etc/vim/vimrc.j2"
      dest: "{{ '%s/vim/vimrc'|format(bash_bashrc_dir_path) }}"
      owner: "{{ bash_bashrc_install_owner }}"
      group: "{{ bash_bashrc_install_group }}"
      mode: "{{ bash_bashrc_file_mode|d('0644') }}"

  tags:
  - bash-bashrc-vimrc

- block:

  - name: "bashrc | symlinks for user | Create a symlink"
    file:
      src: "{{ '%s/%s'|format(bash_bashrc_dir_path,item.src) }}"
      dest: "{{ '%s/%s'|format(bash_bashrc_install_path,item.dest) }}"
      state: link
      force: yes
    with_items: "{{ __bashrc_symlinks_for_user|d([]) }}"
    when: item.src|d(none) is not none
          and item.dest|d(none) is not none

  vars:
    __bashrc_symlinks_for_user:
    - src: "inputrc.d/default"
      dest: ".inputrc"
    - src: "vim/vimrc"
      dest: ".vimrc"

  when: bash_bashrc_for_user == true
  tags:
  - bash-bashrc-for-user

