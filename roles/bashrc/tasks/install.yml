---
# tasks file for bashrc
# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline

- block:

  - name: bashrc | install | backup | Create a directory for backup.
    file:
      path: "{{ _backup_to_dir }}"
      state: directory
      owner: "{{ bashrc_install_owner }}"
      group: "{{ bashrc_install_group }}"
      mode: "550"
    register: _backup_to_dir_mkdir

  - name: bashrc | install | backup | Backup the original files.
    copy:
      src: "{{ '%s/%s'|format(_backup_from_dir,_bashrc_backup_file) }}"
      dest: "{{ '%s/%s'|format(_backup_to_dir,_bashrc_backup_file) }}"
      remote_src: true
      force: no
      backup: yes
    ignore_errors: true
    with_items:
    - bashrc
    - profile
    - bash.bashrc
    - bash.profile
    loop_control:
      loop_var: _bashrc_backup_file
    when: _backup_to_dir_mkdir|changed

  vars:
    _backup_from_dir: "{{ bashrc_install_path }}"
    _backup_to_dir: "{{ '%s/%s'|format(_backup_from_dir,'._bashrc-origin') }}"
  tags:
  - bashrc-install-backup-origins

- block:

  - name: "bashrc | install | bash.bashrc.d | Create a '{{ bashrc_bashrcdir_name }}' directory."
    file:
      path: "{{ bashrc_bashrcdir_path }}"
      state: directory
      owner: "{{ bashrc_install_owner }}"
      group: "{{ bashrc_install_group }}"
      mode: "{{ bashrc_dir_mode|d('0755') }}"

  - name: "bashrc | bash.bashrc.d | Install '{{ bashrc_bashrcdir_name }}' files"
    synchronize:
      src: 'etc/bash.bashrc.d/'
      dest: "{{ bashrc_bashrcdir_path }}/"
      checksum: yes
      compress: yes
      delete: yes
      links: yes
      recursive: yes
    register: _bashrc_files_installed

  - name: "bashrc | install | bash.bashrc.d | Find files and dirs under the {{ bashrc_bashrcdir_name }}/"
    find:
      paths: "{{ bashrc_bashrcdir_path }}"
      recurse: yes
    register: _bashrc_find

  - name: "bashrc | install | bash.bashrc.d | Change mode all files and dirs under the {{ bashrc_bashrcdir_name }}/"
    file:
      path: "{{ _bashrc_find_file.path }}"
      state: touch
      owner: "{{ bashrc_install_owner }}"
      group: "{{ bashrc_install_group }}"
      mode: "{{ bashrc_dir_mode|d('0755') 
                if _bashrc_find_file.isdir|d(false) else
                bashrc_script_mode|d('0755')
                if _bashrc_find_file.path|match('\.sh[^.]*$')
                or _bashrc_find_file.path|match(
                   '^%s/bin/.*$'|format(bashrc_bashrcdir_path)) else
                bashrc_file_mode|d('0644') }}"
    with_items: "{{ _bashrc_find.files|d([]) }}"
    loop_control:
      loop_var: _bashrc_find_file
    when: (_bashrc_find|d(none) is not none
          and _bashrc_find.files(none) is not none)
          and (_bashrc_find_file|d(none) is not none 
               and _bashrc_find_file.path|d(none) is not none
               and _bashrc_find_file.path|trim|length > 0)

  tags:
  - bashrc-install-bashrc-dir

- block:

  - name: "bashrc | install | template | Install the rc files from template"
    template:
      src: "{{ 'etc/%s'|format(
               _bashrc_template|replace(_templates_etc_dir,'')) }}"
      dest: "{{ '%s/%s'|format(
                bashrc_install_path,_bashrc_template)|replace(
                _templates_etc_dir,'')|replace('.j2','') }}"
      owner: "{{ bashrc_install_owner }}"
      group: "{{ bashrc_install_group }}"
      mode: "{{ bashrc_file_mode|d('0644') }}"
    with_lines: 
    - "find {{ _bashrc_template_dir|quote }} -type f -name '*.j2'"
    loop_control:
      loop_var: _bashrc_template
    when: _bashrc_template|d(none) is not none
          and _bashrc_template|trim|length > 0
  
  vars:
    _templates_etc_dir: "{{ '%s/templates/etc'|format(role_path) }}"
  tags:
  - bashrc-install-template-files

