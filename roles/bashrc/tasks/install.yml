---
# tasks file for bashrc
# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline
#
# Required:
#  bashrc_install_path
#  bashrc_install_owner
#  bashrc_install_group
#
# Options:
#  role_path
#  bashrc_template_dir
#  bashrc_dir_mode
#  bashrc_file_mode
#  bashrc_script_mode
#

- block:

  - name: bashrc | install | backup | Create a directory for backup.
    file:
      path: "{{ _backup_to_dir }}"
      state: directory
      owner: "{{ bashrc_install_owner }}"
      group: "{{ bashrc_install_group }}"
      mode: "550"
    register: _backup_to_dir_mkdir

  - name: bashrc | install | backup | Backup the original files.
    copy:
      src: "{{ '%s/%s'|format(_backup_from_dir,_bashrc_backup_file) }}"
      dest: "{{ '%s/%s'|format(_backup_to_dir,_bashrc_backup_file) }}"
      remote_src: true
      force: no
      backup: yes
    ignore_errors: true
    with_items:
    - bashrc
    - profile
    - bash.bashrc
    - bash.profile
    loop_control:
      loop_var: _bashrc_backup_file
    when: _backup_to_dir_mkdir|changed

  vars:
    _backup_from_dir: "{{ bashrc_install_path }}"
    _backup_to_dir: "{{ '%s/%s'|format(_backup_from_dir,'._bashrc-origin') }}"
  tags:
  - bashrc-install-backup-origins

- block:

  - name: "bashrc | install | bash.bashrc.d | Create a '{{ bashrc_bashrcdir_name }}' directory."
    file:
      path: "{{ bashrc_bashrcdir_path }}"
      state: directory
      owner: "{{ bashrc_install_owner }}"
      group: "{{ bashrc_install_group }}"
      mode: "{{ bashrc_dir_mode|d('0755',true) }}"

  - name: "bashrc | bash.bashrc.d | Install '{{ bashrc_bashrcdir_name }}' files"
    synchronize:
      src: 'etc/bash.bashrc.d/'
      dest: "{{ bashrc_bashrcdir_path }}/"
      checksum: yes
      compress: yes
      delete: yes
      links: yes
      recursive: yes
      rsync_opts:
      - "--no-motd"
      - "--exclude=.git*"
    register: _bashrc_files_installed

  - name: "bashrc | install | bash.bashrc.d | Find files and dirs under the {{ bashrc_bashrcdir_name }}/"
    find:
      paths: "{{ bashrc_bashrcdir_path }}"
      file_type: any
      recurse: yes
      hidden: yes
    register: _bashrc_find

  - name: "bashrc | install | bash.bashrc.d | Change mode all files and dirs under the {{ bashrc_bashrcdir_name }}/"
    file:
      path: "{{ _bashrc_find_file.path }}"
      state: touch
      owner: "{{ bashrc_install_owner }}"
      group: "{{ bashrc_install_group }}"
      mode: "{{ bashrc_dir_mode|d('0755',true)
                if _bashrc_find_file.isdir|d(false,true) else
                bashrc_script_mode|d('0755',true)
                if _bashrc_find_file.path|match('[.]sh([.].+$|$)')
                or _bashrc_find_file.path|match(
                   '^%s/bin/.+$'|format(bashrc_bashrcdir_path)) else
                bashrc_file_mode|d('0644',true) }}"
    with_items: "{{ (_bashrc_find|d({},true)).files|d([],true) }}"
    loop_control:
      loop_var: _bashrc_find_file
    when: (_bashrc_find|d({},true)).files|d([],true)|length > 0
          and (_bashrc_find_file|d({},true)).path|d('',true)|trim|length > 0

  tags:
  - bashrc-install-bashrc-dir

- block:

  - name: "bashrc | install | template | Install the rc files from template"
    template:
      src: "{{
        'etc/%s'|format(_bashrc_template|regex_replace('^[.]+/','')) }}"
      dest: "{{
        '%s/%s'|format(bashrc_install_path,
        _bashrc_template|regex_replace('^[.]+[/]+([^/].*)[.]j2$','\\1')
        ) }}"
      owner: "{{ bashrc_install_owner }}"
      group: "{{ bashrc_install_group }}"
      mode: "{{ bashrc_file_mode|d('0644') }}"
    with_lines:
    - "cd {{ _templates_etc_dir|quote }}; find . -type f -a -name '*.j2'"
    loop_control:
      loop_var: _bashrc_template
    when: _bashrc_template|d('',true)|string|trim|length > 0

  vars:
    _templates_etc_dir: "{{
      bashrc_template_dir|string|trim
      if bashrc_template_dir|d('',true)|string|trim|length > 0 else
      '%s/templates/etc'|format(role_path|d(lookup('pipe','pwd'))) }}"
  tags:
  - bashrc-install-template-files

